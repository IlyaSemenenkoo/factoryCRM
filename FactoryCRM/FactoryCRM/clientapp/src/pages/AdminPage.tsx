import { useEffect, useState } from "react";
import { getAllUsers, createUser, User } from "../api/users";
import { useAuth } from "../auth/AuthContext";
import { RoleEnumMap } from "../constants/orderStatus";

export function AdminPage() {
  const [users, setUsers] = useState<User[]>([]);
  const [fullName, setFullName] = useState("");
  const [role, setRole] = useState<keyof typeof RoleEnumMap>("Sewer");
  const [newUserInfo, setNewUserInfo] = useState<null | { username: string; password: string }>(null);

  const { logout } = useAuth();

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –ø—Ä–∏ –≤—ñ–¥–∫—Ä–∏—Ç—Ç—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
  useEffect(() => {
    getAllUsers()
      .then(setUsers)
      .catch(() => {
        alert("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤");
        logout();
      });
  }, []);

  // –û–±—Ä–æ–±–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
  const handleCreate = async (e: React.FormEvent) => {
    e.preventDefault();
    try {
      const created = await createUser(fullName, RoleEnumMap[role]);


      // –î–æ–¥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Å–ø–∏—Å–æ–∫
      setUsers(prev => [
        ...prev,
        {
          id: "", // —Ç–∏–º—á–∞—Å–æ–≤–æ
          username: created.username,
          fullName: created.fullName,
          role
        }
      ]);

      // –í–∏–≤–æ–¥–∏–º–æ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω—ñ –ª–æ–≥—ñ–Ω —ñ –ø–∞—Ä–æ–ª—å
      setNewUserInfo(created);
      setFullName("");
      setRole("Sewer");
    } catch {
      alert("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞");
    }
  };

  return (
    <div style={{ display: "flex", justifyContent: "space-between", alignItems: "center", marginBottom: 20 }}>
      <h1>üëë –ü–∞–Ω–µ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h1>

      <section>
        <h2>‚ûï –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–æ–≥–æ –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞</h2>
        <form onSubmit={handleCreate} style={{ marginBottom: "1rem" }}>
          <input
            value={fullName}
            onChange={e => setFullName(e.target.value)}
            placeholder="–ü–Ü–ë –ø—Ä–∞—Ü—ñ–≤–Ω–∏–∫–∞"
            required
            style={{ marginRight: "10px" }}
          />
          <select value={role} onChange={e => setRole(e.target.value)} style={{ marginRight: "10px" }}>
            <option value="Sewer">–®–≤–∞—á–∫–∞</option>
            <option value="Shoemaker">–°–∞–ø–æ–∂–Ω–∏–∫</option>
            <option value="Packer">–£–ø–∞–∫–æ–≤–Ω–∏–∫</option>
            <option value="Manager">–ú–µ–Ω–µ–¥–∂–µ—Ä</option>
          </select>
          <button type="submit">–°—Ç–≤–æ—Ä–∏—Ç–∏</button>
        </form>

        {newUserInfo && (
          <div style={{ marginBottom: "1rem" }}>
            <p><strong>–õ–æ–≥—ñ–Ω:</strong> {newUserInfo.username}</p>
            <p><strong>–ü–∞—Ä–æ–ª—å:</strong> {newUserInfo.password}</p>
          </div>
        )}
      </section>

      <section>
        <h2>üìã –£—Å—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ</h2>
        <table border={1} cellPadding={6}>
          <thead>
            <tr>
              <th>–ü–Ü–ë</th>
              <th>–õ–æ–≥—ñ–Ω</th>
              <th>–†–æ–ª—å</th>
            </tr>
          </thead>
          <tbody>
            {users.map((u, i) => (
              <tr key={i}>
                <td>{u.fullName}</td>
                <td>{u.username}</td>
                <td>{String(u.role)}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </section>
    </div>
  );
}
